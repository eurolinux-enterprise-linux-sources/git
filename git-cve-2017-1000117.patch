diff --git a/cache.h b/cache.h
index 5eb0573..0c29397 100644
--- a/cache.h
+++ b/cache.h
@@ -693,6 +693,14 @@ char *strip_path_suffix(const char *path, const char *suffix);
 int daemon_avoid_alias(const char *path);
 int offset_1st_component(const char *path);
 
+/*
+ * Returns true iff "str" could be confused as a command-line option when
+ * passed to a sub-program like "ssh". Note that this has nothing to do with
+ * shell-quoting, which should be handled separately; we're assuming here that
+ * the string makes it verbatim to the sub-program.
+ */
+int looks_like_command_line_option(const char *str);
+
 /* Read and unpack a sha1 file into memory, write memory to a sha1 file */
 extern int sha1_object_info(const unsigned char *, unsigned long *);
 extern void *read_sha1_file_repl(const unsigned char *sha1, enum object_type *type, unsigned long *size, const unsigned char **replacement);
diff --git a/connect.c b/connect.c
index 9ae991a..6525626 100644
--- a/connect.c
+++ b/connect.c
@@ -402,6 +402,11 @@ static void git_proxy_connect(int fd[2], char *host)
 
 	get_host_and_port(&host, &port);
 
+	if (looks_like_command_line_option(host))
+		die("strange hostname '%s' blocked", host);
+	if (looks_like_command_line_option(port))
+		die("strange port '%s' blocked", port);
+
 	argv[0] = git_proxy_command;
 	argv[1] = host;
 	argv[2] = port;
@@ -557,6 +562,10 @@ struct child_process *git_connect(int fd[2], const char *url_orig,
 
 	conn = xcalloc(1, sizeof(*conn));
 
+	if (looks_like_command_line_option(path))
+		die("strange pathname '%s' blocked", path);
+
+
 	strbuf_init(&cmd, MAX_CMD_LEN);
 	strbuf_addstr(&cmd, prog);
 	strbuf_addch(&cmd, ' ');
@@ -569,6 +578,10 @@ struct child_process *git_connect(int fd[2], const char *url_orig,
 	if (protocol == PROTO_SSH) {
 		const char *ssh = getenv("GIT_SSH");
 		int putty = ssh && strcasestr(ssh, "plink");
+
+		if (looks_like_command_line_option(host))
+			die("strange hostname '%s' blocked", host);
+
 		if (!ssh) ssh = "ssh";
 
 		*arg++ = ssh;
diff --git a/path.c b/path.c
index b4c8d91..925f549 100644
--- a/path.c
+++ b/path.c
@@ -735,3 +735,9 @@ int offset_1st_component(const char *path)
 		return 2 + is_dir_sep(path[2]);
 	return is_dir_sep(path[0]);
 }
+
+int looks_like_command_line_option(const char *str)
+{
+	return str && str[0] == '-';
+}
+
